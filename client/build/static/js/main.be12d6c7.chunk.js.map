{"version":3,"sources":["api/index.js","components/login/index.js","components/homepage/index.js","App.js","reportWebVitals.js","index.js"],"names":["login","a","email","password","fetch","method","body","JSON","stringify","headers","then","response","ok","Error","status","json","catch","err","console","log","searchJobs","keyword","Login","onLoginSuccessful","useState","setEmail","setPassword","hasError","setHasError","onSubmit","event","preventDefault","loginResult","name","token","localStorage","setItem","Container","Row","className","Form","Group","controlId","Label","Control","type","placeholder","onChange","target","value","Text","Alert","variant","Button","onClick","Homepage","onLogout","isLoading","setIsLoading","setKeyword","jobsAvailable","setJobsAvailable","onSearchJobs","jobs","InputGroup","Prepend","disabled","Spinner","animation","length","ListGroup","map","position","idx","url","created_at","company","location","title","description","href","rel","aria-current","formatDate","style","overflow","height","replace","right","bottom","width","background","Badge","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","App","isUserSignedIn","setIsUserSignedIn","useEffect","getItem","removeItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be12d6c7.chunk.js","sourcesContent":["export async function login({ email, password }) {\n  return await fetch(\"/api/auth/login\", {\n    method: \"POST\",\n    body: JSON.stringify({ email, password }),\n    headers: { \"Content-Type\": \"application/json\" },\n  })\n    .then((response) => {\n      // If login is not successful, display error message\n      if (!response.ok) {\n        throw new Error(\"HTTP status \" + response.status);\n      }\n\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nexport async function searchJobs({ keyword }) {\n  return await fetch(`/api/homepage/getpositions/${keyword}`, {\n    method: \"GET\",\n    headers: { \"Content-Type\": \"application/json\" },\n  })\n    .then((response) => {\n      // If login is not successful, display error message\n      if (!response.ok) {\n        throw new Error(\"HTTP status \" + response.status);\n      }\n\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n","import React, { useState } from \"react\";\nimport { Container, Row, Form, Button, Alert } from \"react-bootstrap\";\nimport { login } from \"../../api\";\n\nfunction Login({ onLoginSuccessful }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [hasError, setHasError] = useState(false);\n\n  const onEmailChange = (event) => setEmail(event.target.value);\n  const onPasswordChange = (event) => setPassword(event.target.value);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    setHasError(false);\n    const loginResult = await login({ email, password });\n    if (!loginResult) setHasError(true);\n    else {\n      const { name, token } = loginResult;\n      // Save user IDs on local storage\n      localStorage.setItem(\"name\", name);\n      localStorage.setItem(\"token\", token);\n      onLoginSuccessful();\n    }\n  };\n\n  return (\n    <Container>\n      <Row className=\"mt-5\">\n        <h1>Login</h1>\n      </Row>\n      <Row>\n        <Form className=\"w-100\">\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={onEmailChange}\n              value={email}\n            />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={onPasswordChange}\n              value={password}\n            />\n          </Form.Group>\n          {hasError && (\n            <Alert variant={\"danger\"}>\n              The email address and password you entered don't match any\n              account. Please try again.\n            </Alert>\n          )}\n          <Button variant=\"primary\" type=\"submit\" onClick={onSubmit}>\n            Submit\n          </Button>\n        </Form>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport {\n  Container,\n  Row,\n  Form,\n  Button,\n  Alert,\n  InputGroup,\n  Spinner,\n  ListGroup,\n  Badge,\n} from \"react-bootstrap\";\nimport { searchJobs } from \"../../api\";\n\nfunction Homepage({ onLogout }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [keyword, setKeyword] = useState(\"\");\n  const [jobsAvailable, setJobsAvailable] = useState([]);\n\n  const onChangeKeyword = (event) => {\n    setKeyword(event.target.value);\n  };\n\n  const onSearchJobs = async () => {\n    setIsLoading(true);\n    const jobs = await searchJobs({ keyword });\n    setJobsAvailable(jobs);\n    setIsLoading(false);\n  };\n\n  return (\n    <Container>\n      <Row className=\"mt-2 mb-2 d-flex w-100 justify-content-end\">\n        <Button variant=\"outline-danger\" onClick={onLogout}>\n          Log out\n        </Button>\n      </Row>\n      <Row>\n        <h1>Welcome!</h1>\n      </Row>\n      <Row className=\"mt-2\">\n        <h6>\n          Enter one or multiple keywords below to search for matching available\n          jobs on GitHub Jobs.\n        </h6>\n      </Row>\n      <Row>\n        <Form className=\"w-100 mb-5\">\n          <InputGroup>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"e.g. Python, Java, product manager...\"\n              onChange={onChangeKeyword}\n              value={keyword}\n            />\n            <InputGroup.Prepend>\n              <Button\n                variant=\"outline-primary\"\n                onClick={onSearchJobs}\n                disabled={!keyword}\n              >\n                Search jobs\n              </Button>\n            </InputGroup.Prepend>\n          </InputGroup>\n        </Form>\n      </Row>\n      {isLoading && (\n        <Row className=\"justify-content-center mb-5\">\n          <Spinner animation=\"border\" variant=\"primary\" />\n        </Row>\n      )}\n      {!jobsAvailable || !jobsAvailable.length ? (\n        <Alert variant={\"info\"}>\n          No results were found for the entered keyword/s.\n        </Alert>\n      ) : (\n        <ListGroup>\n          {jobsAvailable.map((position, idx) => {\n            const {\n              type,\n              url,\n              created_at,\n              company,\n              location,\n              title,\n              description,\n            } = position;\n            return (\n              <a\n                key={idx}\n                href={url}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className=\"list-group-item list-group-item-action\"\n                aria-current=\"true\"\n              >\n                <div className=\"d-flex w-100 justify-content-between\">\n                  <h5 className=\"mb-1\">{title}</h5>\n                  <small>{formatDate(created_at)}</small>\n                </div>\n                <h6 className=\"mb-1\">{company}</h6>\n                <div\n                  className=\"mb-2\"\n                  style={{\n                    overflow: \"hidden\",\n                    position: \"relative\",\n                    height: \"15em\",\n                  }}\n                >\n                  {description.replace(/<[^>]*>?/gm, \"\")}\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      right: 0,\n                      bottom: 0,\n                      width: \"100%\",\n                      height: \"8em\",\n                      background:\n                        \"linear-gradient(to bottom,  rgba(255,255,255,0) 0%,rgba(255,255,255,0.8) 100%)\",\n                    }}\n                  ></div>\n                </div>\n                <div className=\"d-flex w-100 justify-content-between\">\n                  <small>{location}</small>\n                  <Badge variant=\"primary\">{type}</Badge>\n                </div>\n              </a>\n            );\n          })}\n        </ListGroup>\n      )}\n    </Container>\n  );\n}\n\nexport default Homepage;\n\nfunction formatDate(date) {\n  var d = new Date(date),\n    month = \"\" + (d.getMonth() + 1),\n    day = \"\" + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = \"0\" + month;\n  if (day.length < 2) day = \"0\" + day;\n\n  return [month, day, year].join(\"-\");\n}\n","import React, { useEffect, useState } from \"react\";\nimport Login from \"./components/login\";\nimport Homepage from \"./components/homepage\";\n\nfunction App() {\n  const [isUserSignedIn, setIsUserSignedIn] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) setIsUserSignedIn(true);\n    else setIsUserSignedIn(false);\n  }, []);\n\n  const onLoginSuccessful = () => {\n    setIsUserSignedIn(true);\n  };\n\n  const onLogout = () => {\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"token\");\n    setIsUserSignedIn(false);\n  };\n\n  return (\n    (isUserSignedIn && <Homepage onLogout={onLogout} />) || (\n      <Login onLoginSuccessful={onLoginSuccessful} />\n    )\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}